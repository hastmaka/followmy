{"version":3,"file":"static/js/350.3cb9dc33.chunk.js","mappings":"uTAee,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IADiBC,EAAAA,EAAAA,OACuBC,EAAAA,EAAAA,WAAS,IAAM,eAAhDC,EAAY,KAAEC,EAAe,KACpC,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAGpBC,EAAqB,yCAAG,WAAOC,GAAC,oFAKgB,GAJlDA,EAAEC,iBACIC,EAAO,IAAIC,SAASH,EAAEI,eACxBC,EAAQH,EAAKI,IAAI,SACjBC,EAAWL,EAAKI,IAAI,YACpBE,EAAkBN,EAAKI,IAAI,mBAC5BC,IAAaC,EAAe,yCACpBC,OAAOC,oBAAoB,CAC9BC,KAAM,UACNC,QAAQ,oDACV,YACKL,EAASM,OAAS,GAAC,0CACnBJ,OAAOC,oBAAoB,CAC9BC,KAAM,UACNC,QAAQ,8CACV,QAEc,OAAhBd,GAAW,GAAK,UACG,8BAAoDgB,MAAK,SAAAC,GACxE,OAAOA,EAAOC,aAAaX,EAAOE,EACtC,IAAE,QAFQ,KAAJU,EAAI,QAGA,CAAD,iCACgB,uCAAuBH,MAAK,SAAAC,GAC7C,OAAOA,EAAOG,qBAAqBD,EACvC,IAAG,KAAD,GACY,YAHF,QAIRR,OAAOC,oBAAoB,CACvBC,KAAM,UACNC,QAAS,kDAEbrB,EAAS,WAETkB,OAAOC,oBAAoB,CACvBC,KAAM,OACNC,QAAS,qCAEhB,QAELd,GAAW,GAAM,4CAExB,gBAxC0B,sCA0C3B,OACI,UAAC,IAAY,YACT,SAAC,IAAM,CAACqB,KAAK,UAAUC,QAAQ,KAAKC,GAAI,CAACC,UAAW,SAAUC,OAAQ,mBAAoBC,SAAU,aACpG,UAAC,IAAG,CAACC,UAAU,OAAOC,SAAU3B,EAAsB,WAClD,SAAC,IAAW,CAAC4B,UAAQ,EAAChB,KAAK,QAAQiB,KAAK,QAAQC,MAAM,gBAAgBC,WAAS,KAC/E,SAAC,IAAW,CACRH,UAAQ,EACRC,KAAK,WACLC,MAAM,WACNlB,KAAMhB,EAAe,OAAS,WAC9BoC,WAAY,CACRC,cACI,SAAC,IAAc,CAACC,SAAS,MAAK,UAC1B,SAAC,IAAU,CACPZ,GAAI,CACAa,MAAO,QAEXC,KAAK,MACLC,QAAS,kBAAMxC,GAAiBD,EAAa,EAAC,SAC7CA,GAAe,SAAC,IAAiB,KAAK,SAAC,IAAc,YAM1E,SAAC,IAAW,CACRgC,UAAQ,EACRC,KAAK,kBACLC,MAAM,mBACNlB,KAAMhB,EAAe,OAAS,WAC9BoC,WAAY,CACRC,cACI,SAAC,IAAc,CAACC,SAAS,MAAK,UAC1B,SAAC,IAAU,CACPZ,GAAI,CACAa,MAAO,QAEXC,KAAK,MACLC,QAAS,kBAAMxC,GAAiBD,EAAa,EAAC,SAC7CA,GAAe,SAAC,IAAiB,KAAK,SAAC,IAAc,YAO1E,SAAC,IAAY,CACT0B,GAAI,CAACgB,UAAW,QAChBC,WAAS,EACTC,KAAK,QACL5B,KAAK,SACLS,QAAQ,WACRvB,QAASA,EAAQ,SACpB,YAGD,SAAC,IAAQ,CACLwB,GAAI,CACAmB,QAAS,WACTC,OAAQ,QAEZrB,QAAQ,WACRc,MAAM,QACNE,QAAS,kBAAM7C,EAAS,SAAS,EAAC,SACrC,gBAIjB,C","sources":["section/login/CreateAccount.jsx"],"sourcesContent":["import {useState} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\n// material\nimport {Box, IconButton, InputAdornment} from '@mui/material';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n//\nimport LoginWrapper from './LoginWrapper';\nimport EzLoadingBtn from \"../../components/EzLoadingBtn/EzLoadingBtn\";\nimport EzTextField from \"../../components/EzTextField/EzTextField\";\nimport EzButton from \"../../components/EzButton/EzButton\";\nimport EzText from \"../../components/EzText/EzText\";\n\n//----------------------------------------------------------------\n\nexport default function CreateAccount() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const [showPassword, setShowPassword] = useState(false);\n    const [loading, setLoading] = useState(false);\n    // debugger\n\n    const onCreateAccountSubmit = async (e) => {\n        e.preventDefault();\n        const data = new FormData(e.currentTarget);\n        let email = data.get('email'),\n            password = data.get('password'),\n            confirmPassword = data.get('confirmPassword');\n        if(password !== confirmPassword) {\n            return window.displayNotification({\n                type: 'warning',\n                content: `Password doesn't match, double check Caps Lock`\n            })\n        } else if (password.length < 6) {\n            return window.displayNotification({\n                type: 'warning',\n                content: `Password has to be at least 6 characters`\n            })\n        } else {\n            setLoading(true)\n            const user = await import('../../helper/firebase/FirebaseAuthService').then(module => {\n                return module.registerUser(email, password)\n            })\n            if(!!user) {\n                const dbUser = await import('../../helper').then(module => {\n                    return module.createAccountProcess(user)\n                });\n                if(dbUser === 'created') {\n                    window.displayNotification({\n                        type: 'success',\n                        content: 'Account created successfully, now can Sign in'\n                    });\n                    navigate('/login')\n                } else {\n                    window.displayNotification({\n                        type: 'info',\n                        content: 'Error while creating the account'\n                    })\n                }\n            }\n            setLoading(false)\n        }\n    }\n\n    return (\n        <LoginWrapper>\n            <EzText text='Sign up' variant='h4' sx={{textAlign: 'center', margin: '0 20px 10px 20px', fontSize: '1.5rem'}}/>\n            <Box component='form' onSubmit={onCreateAccountSubmit}>\n                <EzTextField required type='email' name='email' label='Email address' autoFocus/>\n                <EzTextField\n                    required\n                    name='password'\n                    label='Password'\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position='end'>\n                                <IconButton\n                                    sx={{\n                                        color: '#999'\n                                    }}\n                                    edge='end'\n                                    onClick={() => setShowPassword(!showPassword)}>\n                                    {showPassword ? <VisibilityOffIcon/> : <VisibilityIcon/>}\n                                </IconButton>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <EzTextField\n                    required\n                    name='confirmPassword'\n                    label='Confirm Password'\n                    type={showPassword ? 'text' : 'password'}\n                    InputProps={{\n                        endAdornment: (\n                            <InputAdornment position='end'>\n                                <IconButton\n                                    sx={{\n                                        color: '#999'\n                                    }}\n                                    edge='end'\n                                    onClick={() => setShowPassword(!showPassword)}>\n                                    {showPassword ? <VisibilityOffIcon/> : <VisibilityIcon/>}\n                                </IconButton>\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n\n                <EzLoadingBtn\n                    sx={{marginTop: '25px'}}\n                    fullWidth\n                    size='large'\n                    type='submit'\n                    variant='outlined'\n                    loading={loading}\n                >\n                    Create\n                </EzLoadingBtn>\n                <EzButton\n                    sx={{\n                        padding: '8px 22px',\n                        height: '48px'\n                    }}\n                    variant='outlined'\n                    color='error'\n                    onClick={() => navigate('/login')}\n                >Cancel</EzButton>\n            </Box>\n        </LoginWrapper>\n    );\n}\n"],"names":["CreateAccount","navigate","useNavigate","useLocation","useState","showPassword","setShowPassword","loading","setLoading","onCreateAccountSubmit","e","preventDefault","data","FormData","currentTarget","email","get","password","confirmPassword","window","displayNotification","type","content","length","then","module","registerUser","user","createAccountProcess","text","variant","sx","textAlign","margin","fontSize","component","onSubmit","required","name","label","autoFocus","InputProps","endAdornment","position","color","edge","onClick","marginTop","fullWidth","size","padding","height"],"sourceRoot":""}